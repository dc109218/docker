# Set the global options
# cat ../s-nginx/certs/roleit_com.crt ../s-nginx/certs/roleit_com.key > roleit.pem
# docker kill -s HUP proxy

global
    log stdout local0
    chroot /var/lib/haproxy
    user haproxy
    group haproxy
    maxconn 2048
    pidfile /var/run/haproxy.pid
    daemon

# Set the defaults
defaults
  mode http
  log global
  option httplog
  option  http-server-close
  option  dontlognull
  option  redispatch
  option  contstats
  retries 3
  backlog 10000
  timeout client          25s
  timeout connect          5s
  timeout server          25s
  timeout tunnel        3600s
  timeout http-keep-alive  1s
  timeout http-request    15s
  timeout queue           30s
  timeout tarpit          60s
  default-server inter 3s rise 2 fall 3
  option forwardfor

frontend app-http-in
    bind *:80
    bind *:443 ssl crt /usr/local/etc/haproxy/roleit.com.pem
    mode http
    option httplog
    http-request set-header X-Forwarded-Proto https if { ssl_fc }
    # redirect scheme https code 301 if !{ ssl_fc }

    acl is_graphql path_beg /graphql
    acl is_rest path_beg /rest
    acl is_io path_end /socket.io
    # acl is_io hdr(host) -i rit.roleit.com

    use_backend graphql if is_graphql
    use_backend rest if is_rest
    use_backend socket if is_io

backend graphql
    mode http
    balance roundrobin
    server graphql 10.122.0.2:19784 check
    # server server2 10.122.0.3:19784

backend rest
    mode http
    balance roundrobin
    server rest 10.122.0.2:19785 check
    # server rest 10.122.0.3:19785

# backend socket
#     mode http
#     balance consistent-hash
#     hash-type consistent
#     server socket 10.122.0.2:19786 check
    # server socket 10.122.0.3:19786

# backend socket
#     mode http
#     balance roundrobin
#     option http-server-close
#     option forwardfor
#     server socket 10.122.0.2:19786 check

backend socket
  option httpchk HEAD /healthcheck
  http-check expect status 200
  cookie io prefix indirect nocache # using the `io` cookie set upon handshake
  server socket1 10.122.0.2:19786 cookie socket1 check

# web-roleit
# frontend web-http-in
#     bind *:80
#     bind *:443 ssl crt /usr/local/etc/haproxy/roleit.com.pem
#     mode http
#     option httplog
#     http-request set-header X-Forwarded-Proto https if { ssl_fc }

#     # Redirect roleit.com to www.roleit.com
#     http-request redirect scheme https if { hdr(host) -i roleit.com }

#     acl is_ping path_beg /ping
#     acl is_share path_beg /share

#     use_backend backapi if is_ping
#     use_backend shareapi if is_share
#     default_backend rolefront

# backend rolefront
#     mode http
#     balance roundrobin
#     server server1 10.0.101.155:10010
#     server server2 10.0.102.150:10010

# backend backapi
#     mode http
#     balance roundrobin
#     server server1 10.0.101.155:10040
#     server server2 10.0.102.150:10040

# backend shareapi
#     mode http
#     balance roundrobin
#     server server1 10.0.101.155:10020
#     server server2 10.0.102.150:10020

