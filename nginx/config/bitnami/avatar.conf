# docker exec nginx sh -c "nginx -s reload"

map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
}

upstream graphql {
    server 10.122.0.2:19784;
    server 10.122.0.3:19784;
}

upstream rest {
    server 10.122.0.2:19785;
    server 10.122.0.3:19785;
}

upstream socket {
    hash $remote_addr consistent;
    server 10.122.0.2:19786;
    server 10.122.0.3:19786;
}

server {
    listen      80;
    listen      443 ssl http2;
    listen      [::]:443 ssl http2 ipv6only=on;
    server_name avatar.roleit.com;

    # access_log /opt/bitnami/nginx/logs/roleit_access.log;
    # error_log /opt/bitnami/nginx/logs/roleit_error.log;

    ssl_certificate      /opt/bitnami/nginx/conf/bitnami/certs/roleit_com.crt;
    ssl_certificate_key  /opt/bitnami/nginx/conf/bitnami/certs/roleit_com.key;

    ssl_session_cache    shared:SSL:1m;
    ssl_session_timeout  5m;

    # ssl_ciphers  HIGH:!aNULL:!MD5;
    ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
    ssl_prefer_server_ciphers  on;
    add_header Strict-Transport-Security "max-age=15768000" always;

    server_tokens off;
    # more_clear_headers Server;
    # more_set_headers 'Server: Rserver';

    location ~* \.io {
        proxy_pass http://socket;
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Real-IP $remote_addr;
    }

    location /graphql {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://graphql;
    }

    location /rest {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://rest;
    }

    # force https-redirects
    if ($scheme = http) {
      return 301 https://$server_name$request_uri;
    }

}

